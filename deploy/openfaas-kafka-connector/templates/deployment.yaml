apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openfaas-kafka-connector.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "openfaas-kafka-connector.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "openfaas-kafka-connector.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        linkerd.io/inject: '{{.Values.linkerd }}'
      labels:
        app.kubernetes.io/name: {{ include "openfaas-kafka-connector.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: auth
          secret:
            secretName: basic-auth
        - name: connector
          secret:
            secretName: openfaas-connector
      imagePullSecrets:
        - name: '{{.Values.imagePullSecrets}}'
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          env:
            - name: CONNECTOR_NAME
              value: {{ .Values.connector_name | quote }}
            - name: GATEWAY_URI
              value: {{ .Values.gateway_uri | quote }}
            - name: GATEWAY_SSL
              value: {{ .Values.gateway_ssl | quote  }}
              {{ if .Values.topics }}
            - name: TOPICS
              value: {{ .Values.topics | quote }}
              {{ end }}
              {{ if .Values.excludeTopics }}
            - name: EXCLUDE_TOPICS
              value: {{ .Values.excludeTopics | quote }}
              {{ end }}
            - name: KAFKA_CONNECTION
              value: {{ .Values.kafka_connection | quote }}
            - name: KAFKA_SSL
              value: {{ .Values.kafka_ssl | quote }}
            - name: REDIS_CONNECTION
              value: {{ .Values.redis_connection | quote }}
            - name: REDIS_SSL
              value: {{ .Values.redis_ssl | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis_port | quote }}
            - name: CONCURRENCY
              value: {{ .Values.concurrency | quote }}
            - name: CREATE_JOB_QUEUE_PER_FUNCTION
              value: {{ .Values.perFunctionJobQueue | quote }}
            - name: NEW_RELIC_LICENSE_KEY
              value: '{{.Values.newRelicLicense}}'
            - name: NEW_RELIC_APP_NAME
              value: '{{.Values.newRelicAppName}}'
            - name: NEW_RELIC_ENABLED
              value: '{{.Values.newRelicEnable}}'
          volumeMounts:
            - name: auth
              readOnly: true
              mountPath: "/var/secrets"
            - name: connector
              readOnly: true
              mountPath: "/var/connector-secrets"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
